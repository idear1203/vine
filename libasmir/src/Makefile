# Makefile.in generated by automake 1.10.2 from Makefile.am.
# libasmir/src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/vine
pkglibdir = $(libdir)/vine
pkgincludedir = $(includedir)/vine
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
subdir = libasmir/src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/./m4/ac_ocaml.m4 \
	$(top_srcdir)/./m4/ac_prog_latex.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/libasmir/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)"
libLIBRARIES_INSTALL = $(INSTALL_DATA)
LIBRARIES = $(lib_LIBRARIES)
AR = ar
ARFLAGS = cru
libasmir_a_AR = $(AR) $(ARFLAGS)
libasmir_a_LIBADD =
am_libasmir_a_OBJECTS = debug.$(OBJEXT) objdump.$(OBJEXT) \
	asm_program.$(OBJEXT) vexmem.$(OBJEXT) irtoir.$(OBJEXT) \
	irtoir-i386.$(OBJEXT) irtoir-arm.$(OBJEXT) irtoir_c.$(OBJEXT) \
	vexir.$(OBJEXT) gen_thunks.$(OBJEXT) stmt.$(OBJEXT) \
	stmt_c.$(OBJEXT) exp.$(OBJEXT) exp_c.$(OBJEXT) \
	translate.$(OBJEXT)
libasmir_a_OBJECTS = $(am_libasmir_a_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(top_builddir)/libasmir
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libasmir_a_SOURCES)
DIST_SOURCES = $(libasmir_a_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/aaron/documents/binary/bitblaze/vine-build/vine-1/missing --run aclocal-1.10
AMTAR = ${SHELL} /home/aaron/documents/binary/bitblaze/vine-build/vine-1/missing --run tar
AUTOCONF = ${SHELL} /home/aaron/documents/binary/bitblaze/vine-build/vine-1/missing --run autoconf
AUTOHEADER = ${SHELL} /home/aaron/documents/binary/bitblaze/vine-build/vine-1/missing --run autoheader
AUTOMAKE = ${SHELL} /home/aaron/documents/binary/bitblaze/vine-build/vine-1/missing --run automake-1.10
AWK = gawk
CAMLIDL = /usr/bin/camlidl
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = -liberty -lbfd 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/aaron/documents/binary/bitblaze/vine-build/vine-1/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
OCAMLC = /usr/bin/ocamlc.opt
OCAMLC_OPT = /usr/bin/ocamlc.opt
OCAMLDEP = /usr/bin/ocamldep.opt
OCAMLDEP_OPT = /usr/bin/ocamldep.opt
OCAMLDOC = /usr/bin/ocamldoc.opt
OCAMLDOC_OPT = /usr/bin/ocamldoc.opt
OCAMLFIND = /usr/bin/ocamlfind
OCAMLLEX = /usr/bin/ocamllex.opt
OCAMLLEX_OPT = /usr/bin/ocamllex.opt
OCAMLMKLIB = /usr/bin/ocamlmklib
OCAMLMKTOP = /usr/bin/ocamlmktop
OCAMLOPT = /usr/bin/ocamlopt.opt
OCAMLOPT_OPT = /usr/bin/ocamlopt.opt
OCAMLYACC = /usr/bin/ocamlyacc
PACKAGE = vine
PACKAGE_BUGREPORT = bitblaze-users@googlegroups.com
PACKAGE_NAME = vine
PACKAGE_STRING = vine 1.0
PACKAGE_TARNAME = vine
PACKAGE_VERSION = 1.0
PATH_SEPARATOR = :
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
VERSION = 1.0
VEX_DIR = /home/aaron/documents/binary/bitblaze/vine-build/vine-1/VEX/
abs_builddir = /home/aaron/documents/binary/bitblaze/vine-build/vine-1/libasmir/src
abs_srcdir = /home/aaron/documents/binary/bitblaze/vine-build/vine-1/libasmir/src
abs_top_builddir = /home/aaron/documents/binary/bitblaze/vine-build/vine-1
abs_top_srcdir = /home/aaron/documents/binary/bitblaze/vine-build/vine-1
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/aaron/documents/binary/bitblaze/vine-build/vine-1/install-sh
latex = latex
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
lib_LIBRARIES = libasmir.a
#lib_LTLIBRARIES = libasmir.la
AM_CFLAGS = -I/home/aaron/documents/binary/bitblaze/vine-build/vine-1/VEX//pub -I./include -fPIC
AM_CXXFLAGS = $(AM_CFLAGS)
libasmir_a_SOURCES = \
	./include/asm_program.h \
	./include/common.h \
	./include/debug.h \
	./include/disasm-pp.h \
	./include/exp.h \
	./include/info.h \
	./include/ir_program.h \
	./include/irtoir.h \
	./include/irtoir-internal.h \
	./include/irvisitor.h \
	./include/objdump.h \
	./include/stmt.h \
	./include/translate.h \
	./include/vexmem.h \
	./util/debug.cpp \
	./disasm/objdump.cpp \
	./disasm/asm_program.cpp \
	./vex/vexmem.cpp \
	./vex/irtoir.cpp \
	./vex/irtoir-i386.cpp \
	./vex/irtoir-arm.cpp \
	./vex/irtoir_c.cpp \
	./vex/vexir.cpp \
	./vex/gen_thunks.cpp \
	./ir/stmt.cpp \
	./ir/stmt_c.cpp \
	./ir/exp.cpp \
	./ir/exp_c.cpp \
	./ir/translate.cpp

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  libasmir/src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  libasmir/src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(libLIBRARIES_INSTALL) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(libLIBRARIES_INSTALL) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p=$(am__strip_dir) \
	    echo " $(RANLIB) '$(DESTDIR)$(libdir)/$$p'"; \
	    $(RANLIB) "$(DESTDIR)$(libdir)/$$p"; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
libasmir.a: $(libasmir_a_OBJECTS) $(libasmir_a_DEPENDENCIES) 
	-rm -f libasmir.a
	$(libasmir_a_AR) libasmir.a $(libasmir_a_OBJECTS) $(libasmir_a_LIBADD)
	$(RANLIB) libasmir.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/asm_program.Po
include ./$(DEPDIR)/debug.Po
include ./$(DEPDIR)/exp.Po
include ./$(DEPDIR)/exp_c.Po
include ./$(DEPDIR)/gen_thunks.Po
include ./$(DEPDIR)/irtoir-arm.Po
include ./$(DEPDIR)/irtoir-i386.Po
include ./$(DEPDIR)/irtoir.Po
include ./$(DEPDIR)/irtoir_c.Po
include ./$(DEPDIR)/objdump.Po
include ./$(DEPDIR)/stmt.Po
include ./$(DEPDIR)/stmt_c.Po
include ./$(DEPDIR)/translate.Po
include ./$(DEPDIR)/vexir.Po
include ./$(DEPDIR)/vexmem.Po

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

debug.o: ./util/debug.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT debug.o -MD -MP -MF $(DEPDIR)/debug.Tpo -c -o debug.o `test -f './util/debug.cpp' || echo '$(srcdir)/'`./util/debug.cpp
	mv -f $(DEPDIR)/debug.Tpo $(DEPDIR)/debug.Po
#	source='./util/debug.cpp' object='debug.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o debug.o `test -f './util/debug.cpp' || echo '$(srcdir)/'`./util/debug.cpp

debug.obj: ./util/debug.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT debug.obj -MD -MP -MF $(DEPDIR)/debug.Tpo -c -o debug.obj `if test -f './util/debug.cpp'; then $(CYGPATH_W) './util/debug.cpp'; else $(CYGPATH_W) '$(srcdir)/./util/debug.cpp'; fi`
	mv -f $(DEPDIR)/debug.Tpo $(DEPDIR)/debug.Po
#	source='./util/debug.cpp' object='debug.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o debug.obj `if test -f './util/debug.cpp'; then $(CYGPATH_W) './util/debug.cpp'; else $(CYGPATH_W) '$(srcdir)/./util/debug.cpp'; fi`

objdump.o: ./disasm/objdump.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT objdump.o -MD -MP -MF $(DEPDIR)/objdump.Tpo -c -o objdump.o `test -f './disasm/objdump.cpp' || echo '$(srcdir)/'`./disasm/objdump.cpp
	mv -f $(DEPDIR)/objdump.Tpo $(DEPDIR)/objdump.Po
#	source='./disasm/objdump.cpp' object='objdump.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o objdump.o `test -f './disasm/objdump.cpp' || echo '$(srcdir)/'`./disasm/objdump.cpp

objdump.obj: ./disasm/objdump.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT objdump.obj -MD -MP -MF $(DEPDIR)/objdump.Tpo -c -o objdump.obj `if test -f './disasm/objdump.cpp'; then $(CYGPATH_W) './disasm/objdump.cpp'; else $(CYGPATH_W) '$(srcdir)/./disasm/objdump.cpp'; fi`
	mv -f $(DEPDIR)/objdump.Tpo $(DEPDIR)/objdump.Po
#	source='./disasm/objdump.cpp' object='objdump.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o objdump.obj `if test -f './disasm/objdump.cpp'; then $(CYGPATH_W) './disasm/objdump.cpp'; else $(CYGPATH_W) '$(srcdir)/./disasm/objdump.cpp'; fi`

asm_program.o: ./disasm/asm_program.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asm_program.o -MD -MP -MF $(DEPDIR)/asm_program.Tpo -c -o asm_program.o `test -f './disasm/asm_program.cpp' || echo '$(srcdir)/'`./disasm/asm_program.cpp
	mv -f $(DEPDIR)/asm_program.Tpo $(DEPDIR)/asm_program.Po
#	source='./disasm/asm_program.cpp' object='asm_program.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asm_program.o `test -f './disasm/asm_program.cpp' || echo '$(srcdir)/'`./disasm/asm_program.cpp

asm_program.obj: ./disasm/asm_program.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asm_program.obj -MD -MP -MF $(DEPDIR)/asm_program.Tpo -c -o asm_program.obj `if test -f './disasm/asm_program.cpp'; then $(CYGPATH_W) './disasm/asm_program.cpp'; else $(CYGPATH_W) '$(srcdir)/./disasm/asm_program.cpp'; fi`
	mv -f $(DEPDIR)/asm_program.Tpo $(DEPDIR)/asm_program.Po
#	source='./disasm/asm_program.cpp' object='asm_program.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asm_program.obj `if test -f './disasm/asm_program.cpp'; then $(CYGPATH_W) './disasm/asm_program.cpp'; else $(CYGPATH_W) '$(srcdir)/./disasm/asm_program.cpp'; fi`

vexmem.o: ./vex/vexmem.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT vexmem.o -MD -MP -MF $(DEPDIR)/vexmem.Tpo -c -o vexmem.o `test -f './vex/vexmem.cpp' || echo '$(srcdir)/'`./vex/vexmem.cpp
	mv -f $(DEPDIR)/vexmem.Tpo $(DEPDIR)/vexmem.Po
#	source='./vex/vexmem.cpp' object='vexmem.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o vexmem.o `test -f './vex/vexmem.cpp' || echo '$(srcdir)/'`./vex/vexmem.cpp

vexmem.obj: ./vex/vexmem.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT vexmem.obj -MD -MP -MF $(DEPDIR)/vexmem.Tpo -c -o vexmem.obj `if test -f './vex/vexmem.cpp'; then $(CYGPATH_W) './vex/vexmem.cpp'; else $(CYGPATH_W) '$(srcdir)/./vex/vexmem.cpp'; fi`
	mv -f $(DEPDIR)/vexmem.Tpo $(DEPDIR)/vexmem.Po
#	source='./vex/vexmem.cpp' object='vexmem.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o vexmem.obj `if test -f './vex/vexmem.cpp'; then $(CYGPATH_W) './vex/vexmem.cpp'; else $(CYGPATH_W) '$(srcdir)/./vex/vexmem.cpp'; fi`

irtoir.o: ./vex/irtoir.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT irtoir.o -MD -MP -MF $(DEPDIR)/irtoir.Tpo -c -o irtoir.o `test -f './vex/irtoir.cpp' || echo '$(srcdir)/'`./vex/irtoir.cpp
	mv -f $(DEPDIR)/irtoir.Tpo $(DEPDIR)/irtoir.Po
#	source='./vex/irtoir.cpp' object='irtoir.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o irtoir.o `test -f './vex/irtoir.cpp' || echo '$(srcdir)/'`./vex/irtoir.cpp

irtoir.obj: ./vex/irtoir.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT irtoir.obj -MD -MP -MF $(DEPDIR)/irtoir.Tpo -c -o irtoir.obj `if test -f './vex/irtoir.cpp'; then $(CYGPATH_W) './vex/irtoir.cpp'; else $(CYGPATH_W) '$(srcdir)/./vex/irtoir.cpp'; fi`
	mv -f $(DEPDIR)/irtoir.Tpo $(DEPDIR)/irtoir.Po
#	source='./vex/irtoir.cpp' object='irtoir.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o irtoir.obj `if test -f './vex/irtoir.cpp'; then $(CYGPATH_W) './vex/irtoir.cpp'; else $(CYGPATH_W) '$(srcdir)/./vex/irtoir.cpp'; fi`

irtoir-i386.o: ./vex/irtoir-i386.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT irtoir-i386.o -MD -MP -MF $(DEPDIR)/irtoir-i386.Tpo -c -o irtoir-i386.o `test -f './vex/irtoir-i386.cpp' || echo '$(srcdir)/'`./vex/irtoir-i386.cpp
	mv -f $(DEPDIR)/irtoir-i386.Tpo $(DEPDIR)/irtoir-i386.Po
#	source='./vex/irtoir-i386.cpp' object='irtoir-i386.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o irtoir-i386.o `test -f './vex/irtoir-i386.cpp' || echo '$(srcdir)/'`./vex/irtoir-i386.cpp

irtoir-i386.obj: ./vex/irtoir-i386.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT irtoir-i386.obj -MD -MP -MF $(DEPDIR)/irtoir-i386.Tpo -c -o irtoir-i386.obj `if test -f './vex/irtoir-i386.cpp'; then $(CYGPATH_W) './vex/irtoir-i386.cpp'; else $(CYGPATH_W) '$(srcdir)/./vex/irtoir-i386.cpp'; fi`
	mv -f $(DEPDIR)/irtoir-i386.Tpo $(DEPDIR)/irtoir-i386.Po
#	source='./vex/irtoir-i386.cpp' object='irtoir-i386.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o irtoir-i386.obj `if test -f './vex/irtoir-i386.cpp'; then $(CYGPATH_W) './vex/irtoir-i386.cpp'; else $(CYGPATH_W) '$(srcdir)/./vex/irtoir-i386.cpp'; fi`

irtoir-arm.o: ./vex/irtoir-arm.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT irtoir-arm.o -MD -MP -MF $(DEPDIR)/irtoir-arm.Tpo -c -o irtoir-arm.o `test -f './vex/irtoir-arm.cpp' || echo '$(srcdir)/'`./vex/irtoir-arm.cpp
	mv -f $(DEPDIR)/irtoir-arm.Tpo $(DEPDIR)/irtoir-arm.Po
#	source='./vex/irtoir-arm.cpp' object='irtoir-arm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o irtoir-arm.o `test -f './vex/irtoir-arm.cpp' || echo '$(srcdir)/'`./vex/irtoir-arm.cpp

irtoir-arm.obj: ./vex/irtoir-arm.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT irtoir-arm.obj -MD -MP -MF $(DEPDIR)/irtoir-arm.Tpo -c -o irtoir-arm.obj `if test -f './vex/irtoir-arm.cpp'; then $(CYGPATH_W) './vex/irtoir-arm.cpp'; else $(CYGPATH_W) '$(srcdir)/./vex/irtoir-arm.cpp'; fi`
	mv -f $(DEPDIR)/irtoir-arm.Tpo $(DEPDIR)/irtoir-arm.Po
#	source='./vex/irtoir-arm.cpp' object='irtoir-arm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o irtoir-arm.obj `if test -f './vex/irtoir-arm.cpp'; then $(CYGPATH_W) './vex/irtoir-arm.cpp'; else $(CYGPATH_W) '$(srcdir)/./vex/irtoir-arm.cpp'; fi`

irtoir_c.o: ./vex/irtoir_c.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT irtoir_c.o -MD -MP -MF $(DEPDIR)/irtoir_c.Tpo -c -o irtoir_c.o `test -f './vex/irtoir_c.cpp' || echo '$(srcdir)/'`./vex/irtoir_c.cpp
	mv -f $(DEPDIR)/irtoir_c.Tpo $(DEPDIR)/irtoir_c.Po
#	source='./vex/irtoir_c.cpp' object='irtoir_c.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o irtoir_c.o `test -f './vex/irtoir_c.cpp' || echo '$(srcdir)/'`./vex/irtoir_c.cpp

irtoir_c.obj: ./vex/irtoir_c.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT irtoir_c.obj -MD -MP -MF $(DEPDIR)/irtoir_c.Tpo -c -o irtoir_c.obj `if test -f './vex/irtoir_c.cpp'; then $(CYGPATH_W) './vex/irtoir_c.cpp'; else $(CYGPATH_W) '$(srcdir)/./vex/irtoir_c.cpp'; fi`
	mv -f $(DEPDIR)/irtoir_c.Tpo $(DEPDIR)/irtoir_c.Po
#	source='./vex/irtoir_c.cpp' object='irtoir_c.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o irtoir_c.obj `if test -f './vex/irtoir_c.cpp'; then $(CYGPATH_W) './vex/irtoir_c.cpp'; else $(CYGPATH_W) '$(srcdir)/./vex/irtoir_c.cpp'; fi`

vexir.o: ./vex/vexir.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT vexir.o -MD -MP -MF $(DEPDIR)/vexir.Tpo -c -o vexir.o `test -f './vex/vexir.cpp' || echo '$(srcdir)/'`./vex/vexir.cpp
	mv -f $(DEPDIR)/vexir.Tpo $(DEPDIR)/vexir.Po
#	source='./vex/vexir.cpp' object='vexir.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o vexir.o `test -f './vex/vexir.cpp' || echo '$(srcdir)/'`./vex/vexir.cpp

vexir.obj: ./vex/vexir.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT vexir.obj -MD -MP -MF $(DEPDIR)/vexir.Tpo -c -o vexir.obj `if test -f './vex/vexir.cpp'; then $(CYGPATH_W) './vex/vexir.cpp'; else $(CYGPATH_W) '$(srcdir)/./vex/vexir.cpp'; fi`
	mv -f $(DEPDIR)/vexir.Tpo $(DEPDIR)/vexir.Po
#	source='./vex/vexir.cpp' object='vexir.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o vexir.obj `if test -f './vex/vexir.cpp'; then $(CYGPATH_W) './vex/vexir.cpp'; else $(CYGPATH_W) '$(srcdir)/./vex/vexir.cpp'; fi`

gen_thunks.o: ./vex/gen_thunks.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gen_thunks.o -MD -MP -MF $(DEPDIR)/gen_thunks.Tpo -c -o gen_thunks.o `test -f './vex/gen_thunks.cpp' || echo '$(srcdir)/'`./vex/gen_thunks.cpp
	mv -f $(DEPDIR)/gen_thunks.Tpo $(DEPDIR)/gen_thunks.Po
#	source='./vex/gen_thunks.cpp' object='gen_thunks.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gen_thunks.o `test -f './vex/gen_thunks.cpp' || echo '$(srcdir)/'`./vex/gen_thunks.cpp

gen_thunks.obj: ./vex/gen_thunks.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gen_thunks.obj -MD -MP -MF $(DEPDIR)/gen_thunks.Tpo -c -o gen_thunks.obj `if test -f './vex/gen_thunks.cpp'; then $(CYGPATH_W) './vex/gen_thunks.cpp'; else $(CYGPATH_W) '$(srcdir)/./vex/gen_thunks.cpp'; fi`
	mv -f $(DEPDIR)/gen_thunks.Tpo $(DEPDIR)/gen_thunks.Po
#	source='./vex/gen_thunks.cpp' object='gen_thunks.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gen_thunks.obj `if test -f './vex/gen_thunks.cpp'; then $(CYGPATH_W) './vex/gen_thunks.cpp'; else $(CYGPATH_W) '$(srcdir)/./vex/gen_thunks.cpp'; fi`

stmt.o: ./ir/stmt.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT stmt.o -MD -MP -MF $(DEPDIR)/stmt.Tpo -c -o stmt.o `test -f './ir/stmt.cpp' || echo '$(srcdir)/'`./ir/stmt.cpp
	mv -f $(DEPDIR)/stmt.Tpo $(DEPDIR)/stmt.Po
#	source='./ir/stmt.cpp' object='stmt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o stmt.o `test -f './ir/stmt.cpp' || echo '$(srcdir)/'`./ir/stmt.cpp

stmt.obj: ./ir/stmt.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT stmt.obj -MD -MP -MF $(DEPDIR)/stmt.Tpo -c -o stmt.obj `if test -f './ir/stmt.cpp'; then $(CYGPATH_W) './ir/stmt.cpp'; else $(CYGPATH_W) '$(srcdir)/./ir/stmt.cpp'; fi`
	mv -f $(DEPDIR)/stmt.Tpo $(DEPDIR)/stmt.Po
#	source='./ir/stmt.cpp' object='stmt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o stmt.obj `if test -f './ir/stmt.cpp'; then $(CYGPATH_W) './ir/stmt.cpp'; else $(CYGPATH_W) '$(srcdir)/./ir/stmt.cpp'; fi`

stmt_c.o: ./ir/stmt_c.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT stmt_c.o -MD -MP -MF $(DEPDIR)/stmt_c.Tpo -c -o stmt_c.o `test -f './ir/stmt_c.cpp' || echo '$(srcdir)/'`./ir/stmt_c.cpp
	mv -f $(DEPDIR)/stmt_c.Tpo $(DEPDIR)/stmt_c.Po
#	source='./ir/stmt_c.cpp' object='stmt_c.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o stmt_c.o `test -f './ir/stmt_c.cpp' || echo '$(srcdir)/'`./ir/stmt_c.cpp

stmt_c.obj: ./ir/stmt_c.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT stmt_c.obj -MD -MP -MF $(DEPDIR)/stmt_c.Tpo -c -o stmt_c.obj `if test -f './ir/stmt_c.cpp'; then $(CYGPATH_W) './ir/stmt_c.cpp'; else $(CYGPATH_W) '$(srcdir)/./ir/stmt_c.cpp'; fi`
	mv -f $(DEPDIR)/stmt_c.Tpo $(DEPDIR)/stmt_c.Po
#	source='./ir/stmt_c.cpp' object='stmt_c.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o stmt_c.obj `if test -f './ir/stmt_c.cpp'; then $(CYGPATH_W) './ir/stmt_c.cpp'; else $(CYGPATH_W) '$(srcdir)/./ir/stmt_c.cpp'; fi`

exp.o: ./ir/exp.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT exp.o -MD -MP -MF $(DEPDIR)/exp.Tpo -c -o exp.o `test -f './ir/exp.cpp' || echo '$(srcdir)/'`./ir/exp.cpp
	mv -f $(DEPDIR)/exp.Tpo $(DEPDIR)/exp.Po
#	source='./ir/exp.cpp' object='exp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o exp.o `test -f './ir/exp.cpp' || echo '$(srcdir)/'`./ir/exp.cpp

exp.obj: ./ir/exp.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT exp.obj -MD -MP -MF $(DEPDIR)/exp.Tpo -c -o exp.obj `if test -f './ir/exp.cpp'; then $(CYGPATH_W) './ir/exp.cpp'; else $(CYGPATH_W) '$(srcdir)/./ir/exp.cpp'; fi`
	mv -f $(DEPDIR)/exp.Tpo $(DEPDIR)/exp.Po
#	source='./ir/exp.cpp' object='exp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o exp.obj `if test -f './ir/exp.cpp'; then $(CYGPATH_W) './ir/exp.cpp'; else $(CYGPATH_W) '$(srcdir)/./ir/exp.cpp'; fi`

exp_c.o: ./ir/exp_c.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT exp_c.o -MD -MP -MF $(DEPDIR)/exp_c.Tpo -c -o exp_c.o `test -f './ir/exp_c.cpp' || echo '$(srcdir)/'`./ir/exp_c.cpp
	mv -f $(DEPDIR)/exp_c.Tpo $(DEPDIR)/exp_c.Po
#	source='./ir/exp_c.cpp' object='exp_c.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o exp_c.o `test -f './ir/exp_c.cpp' || echo '$(srcdir)/'`./ir/exp_c.cpp

exp_c.obj: ./ir/exp_c.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT exp_c.obj -MD -MP -MF $(DEPDIR)/exp_c.Tpo -c -o exp_c.obj `if test -f './ir/exp_c.cpp'; then $(CYGPATH_W) './ir/exp_c.cpp'; else $(CYGPATH_W) '$(srcdir)/./ir/exp_c.cpp'; fi`
	mv -f $(DEPDIR)/exp_c.Tpo $(DEPDIR)/exp_c.Po
#	source='./ir/exp_c.cpp' object='exp_c.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o exp_c.obj `if test -f './ir/exp_c.cpp'; then $(CYGPATH_W) './ir/exp_c.cpp'; else $(CYGPATH_W) '$(srcdir)/./ir/exp_c.cpp'; fi`

translate.o: ./ir/translate.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT translate.o -MD -MP -MF $(DEPDIR)/translate.Tpo -c -o translate.o `test -f './ir/translate.cpp' || echo '$(srcdir)/'`./ir/translate.cpp
	mv -f $(DEPDIR)/translate.Tpo $(DEPDIR)/translate.Po
#	source='./ir/translate.cpp' object='translate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o translate.o `test -f './ir/translate.cpp' || echo '$(srcdir)/'`./ir/translate.cpp

translate.obj: ./ir/translate.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT translate.obj -MD -MP -MF $(DEPDIR)/translate.Tpo -c -o translate.obj `if test -f './ir/translate.cpp'; then $(CYGPATH_W) './ir/translate.cpp'; else $(CYGPATH_W) '$(srcdir)/./ir/translate.cpp'; fi`
	mv -f $(DEPDIR)/translate.Tpo $(DEPDIR)/translate.Po
#	source='./ir/translate.cpp' object='translate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o translate.obj `if test -f './ir/translate.cpp'; then $(CYGPATH_W) './ir/translate.cpp'; else $(CYGPATH_W) '$(srcdir)/./ir/translate.cpp'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES)
installdirs:
	for dir in "$(DESTDIR)$(libdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am: install-libLIBRARIES

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLIBRARIES ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLIBRARIES install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-libLIBRARIES

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
